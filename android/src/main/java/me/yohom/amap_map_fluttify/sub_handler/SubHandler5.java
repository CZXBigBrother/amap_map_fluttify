//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_map_fluttify.AmapMapFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler5 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.autonavi.ae.gmap.GLMapState::nativeCalMapZoomScalefactor", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.GLMapState::nativeCalMapZoomScalefactor(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = com.autonavi.ae.gmap.GLMapState.nativeCalMapZoomScalefactor(var0, var1, new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay::addItem", (args, methodResult) -> {
                // args
                // jsonable arg
                Object var1 = (Object) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay ref = (com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay@" + refId + "::addItem(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.addItem(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay::resumeMarker", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay ref = (com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay@" + refId + "::resumeMarker(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.resumeMarker(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay::removeRouteName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay ref = (com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay@" + refId + "::removeRouteName(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removeRouteName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay::remove", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay ref = (com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.BaseRouteOverlay@" + refId + "::remove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.remove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::addVectorItem", (args, methodResult) -> {
                // args
                // ref arg
                com.autonavi.ae.gmap.gloverlay.GLCrossVector.AVectorCrossAttr var1 = (com.autonavi.ae.gmap.gloverlay.GLCrossVector.AVectorCrossAttr) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::addVectorItem(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.addVectorItem(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::addVectorRemainDis", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::addVectorRemainDis(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.addVectorRemainDis(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::addVectorCar", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::addVectorCar(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.addVectorCar(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::setRoadResId", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::setRoadResId(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRoadResId(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::setArrowResId", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::setArrowResId(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setArrowResId(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::setCarResId", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::setCarResId(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCarResId(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::setBackgroundResId", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::setBackgroundResId(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBackgroundResId(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::setSkyResId", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::setSkyResId(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSkyResId(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::getFBOTextureId", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::getFBOTextureId(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getFBOTextureId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLCrossVector::initFBOTexture", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLCrossVector ref = (com.autonavi.ae.gmap.gloverlay.GLCrossVector) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLCrossVector@" + refId + "::initFBOTexture(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.initFBOTexture(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::addItem", (args, methodResult) -> {
                // args
                // jsonable arg
                Object var1 = (Object) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::addItem(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.addItem(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::resumeMarker", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::resumeMarker(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.resumeMarker(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::AddOverlayTexture", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::AddOverlayTexture(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.AddOverlayTexture(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::dipToPixel", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var1 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::dipToPixel(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.dipToPixel(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::setAttribute", (args, methodResult) -> {
                // args
                // ref arg
                com.autonavi.ae.gmap.gloverlay.GLCrossVector.AVectorCrossAttr var1 = (com.autonavi.ae.gmap.gloverlay.GLCrossVector.AVectorCrossAttr) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::setAttribute(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAttribute(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::setData", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::setData(" + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.setData(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::remove", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::remove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.remove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::setImageMode", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::setImageMode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setImageMode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::setGenerateCrossImageListener", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::setGenerateCrossImageListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setGenerateCrossImageListener(new com.amap.api.maps.model.CrossOverlay.GenerateCrossImageListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::setGenerateCrossImageListener::Callback");
            
                    // call dart method
                    @Override
                    public void onGenerateComplete(android.graphics.Bitmap var1, int var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onGenerateComplete(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        int argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.model.CrossOverlay.GenerateCrossImageListener::onGenerateComplete",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay::getTextureID", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay ref = (com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.CrossVectorOverlay@" + refId + "::getTextureID(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getTextureID();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::getNativeInstatnce", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::getNativeInstatnce(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = ref.getNativeInstatnce();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::getCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::getCode(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::getType", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::getType(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::getSubType", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::getSubType(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getSubType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::removeItem", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::removeItem(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.removeItem(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::removeAll", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::removeAll(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removeAll();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::getSize", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::getSize(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getSize();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setVisible", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setVisible(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::isVisible", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setClickable", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setClickable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setClickable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::isClickable", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::isClickable(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isClickable();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::clearFocus", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::clearFocus(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.clearFocus();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::getIsInBundle", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::getIsInBundle(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.getIsInBundle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setMaxCountShown", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setMaxCountShown(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMaxCountShown(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setOverlayOnTop", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setOverlayOnTop(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setOverlayOnTop(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setMinDisplayLevel", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setMinDisplayLevel(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMinDisplayLevel(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setMaxDisplayLevel", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setMaxDisplayLevel(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMaxDisplayLevel(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setOverlayPriority", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setOverlayPriority(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setOverlayPriority(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::getOverlayPriority", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::getOverlayPriority(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getOverlayPriority();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::setOverlayItemPriority", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::setOverlayItemPriority(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setOverlayItemPriority(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.ae.gmap.gloverlay.GLOverlay::useNightStyle", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.ae.gmap.gloverlay.GLOverlay ref = (com.autonavi.ae.gmap.gloverlay.GLOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.ae.gmap.gloverlay.GLOverlay@" + refId + "::useNightStyle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.useNightStyle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.NetworkState::setNetworkListener", (args, methodResult) -> {
                // args
                // ref arg
                com.autonavi.amap.mapcore.maploader.NetworkState.NetworkChangeListener var1 = (com.autonavi.amap.mapcore.maploader.NetworkState.NetworkChangeListener) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.NetworkState ref = (com.autonavi.amap.mapcore.maploader.NetworkState) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.NetworkState@" + refId + "::setNetworkListener(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setNetworkListener(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.NetworkState::registerNetChangeReceiver", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var1 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                boolean var2 = (boolean) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.NetworkState ref = (com.autonavi.amap.mapcore.maploader.NetworkState) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.NetworkState@" + refId + "::registerNetChangeReceiver(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.registerNetChangeReceiver(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.NetworkState::isNetworkConnected", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.NetworkState::isNetworkConnected(" + var0 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.autonavi.amap.mapcore.maploader.NetworkState.isNetworkConnected(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.NetworkState.NetworkChangeListener::networkStateChanged", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var1 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.NetworkState.NetworkChangeListener ref = (com.autonavi.amap.mapcore.maploader.NetworkState.NetworkChangeListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.NetworkState.NetworkChangeListener@" + refId + "::networkStateChanged(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.networkStateChanged(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest::getRequestHead", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest ref = (com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest@" + refId + "::getRequestHead(" + "" + ")");
                }
            
                // invoke native method
                Map<String,String> result;
                try {
                    result = ref.getRequestHead();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Map<String,String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest::getParams", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest ref = (com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest@" + refId + "::getParams(" + "" + ")");
                }
            
                // invoke native method
                Map<String,String> result;
                try {
                    result = ref.getParams();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Map<String,String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest::getURL", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest ref = (com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest@" + refId + "::getURL(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getURL();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest::setPostEntityBytes", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest ref = (com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest@" + refId + "::setPostEntityBytes(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPostEntityBytes(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest::getEntityBytes", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest ref = (com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader.AMapGridDownloadRequest@" + refId + "::getEntityBytes(" + "" + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = ref.getEntityBytes();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader::onDownload", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                long var2 = (long) (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader ref = (com.autonavi.amap.mapcore.maploader.AMapLoader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader@" + refId + "::onDownload(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onDownload(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader::onStop", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader ref = (com.autonavi.amap.mapcore.maploader.AMapLoader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader@" + refId + "::onStop(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onStop();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader::onFinish", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader ref = (com.autonavi.amap.mapcore.maploader.AMapLoader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader@" + refId + "::onFinish(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onFinish();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader::doRequest", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader ref = (com.autonavi.amap.mapcore.maploader.AMapLoader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader@" + refId + "::doRequest(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.doRequest();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader::doCancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader ref = (com.autonavi.amap.mapcore.maploader.AMapLoader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader@" + refId + "::doCancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.doCancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.maploader.AMapLoader::getDeviceId", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var1 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.maploader.AMapLoader ref = (com.autonavi.amap.mapcore.maploader.AMapLoader) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.maploader.AMapLoader@" + refId + "::getDeviceId(" + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getDeviceId(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapProjection::lonlat2Geo", (args, methodResult) -> {
                // args
                // jsonable arg
                double var0 = (double) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                double var2 = (double) ((Map<String, Object>) args).get("var2");
                // ref arg
                com.autonavi.amap.mapcore.IPoint var4 = (com.autonavi.amap.mapcore.IPoint) getHEAP().get((int) ((Map<String, Object>) args).get("var4"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapProjection::lonlat2Geo(" + var0 + var2 + var4 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.MapProjection.lonlat2Geo(var0, var2, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapProjection::geo2LonLat", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // ref arg
                com.autonavi.amap.mapcore.DPoint var2 = (com.autonavi.amap.mapcore.DPoint) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapProjection::geo2LonLat(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.MapProjection.geo2LonLat(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationOption.Inner_3dMap_Enum_LocationProtocol::getValue", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationOption.Inner_3dMap_Enum_LocationProtocol ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationOption.Inner_3dMap_Enum_LocationProtocol) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationOption.Inner_3dMap_Enum_LocationProtocol@" + refId + "::getValue(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getValue();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.TextTextureGenerator::getNearstSize2N", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.TextTextureGenerator::getNearstSize2N(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.autonavi.amap.mapcore.tools.TextTextureGenerator.getNearstSize2N(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.TextTextureGenerator::getTextPixelBuffer", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.tools.TextTextureGenerator ref = (com.autonavi.amap.mapcore.tools.TextTextureGenerator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.TextTextureGenerator@" + refId + "::getTextPixelBuffer(" + var1 + var2 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = ref.getTextPixelBuffer(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.TextTextureGenerator::getCharsWidths", (args, methodResult) -> {
                // args
                // jsonable arg
                int[] var1 = (int[]) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.tools.TextTextureGenerator ref = (com.autonavi.amap.mapcore.tools.TextTextureGenerator) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.TextTextureGenerator@" + refId + "::getCharsWidths(" + var1 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = ref.getCharsWidths(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLFileUtil::writeDatasToFile", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLFileUtil::writeDatasToFile(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.tools.GLFileUtil.writeDatasToFile(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLFileUtil::readFileContents", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLFileUtil::readFileContents(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLFileUtil.readFileContents(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GlMapUtil::decodeAssetResData", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GlMapUtil::decodeAssetResData(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GlMapUtil.decodeAssetResData(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GlMapUtil::dipToPixel", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GlMapUtil::dipToPixel(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GlMapUtil.dipToPixel(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GlMapUtil::spToPixel", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GlMapUtil::spToPixel(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GlMapUtil.spToPixel(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GlMapUtil::getString", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GlMapUtil::getString(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GlMapUtil.getString(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GlMapUtil::isAssic", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GlMapUtil::isAssic(" + var0 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GlMapUtil.isAssic(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GlMapUtil::getAppVersionName", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GlMapUtil::getAppVersionName(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GlMapUtil.getAppVersionName(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::getInt", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::getInt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.getInt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::getLong", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::getLong(" + var0 + var1 + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.getLong(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::getInt2", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::getInt2(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.getInt2(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::getUShort", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::getUShort(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.getUShort(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::convertInt", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::convertInt(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.convertInt(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::convertShort", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::convertShort(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.convertShort(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::convertDouble", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::convertDouble(" + var0 + var1 + ")");
                }
            
                // invoke native method
                double result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.convertDouble(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::writeInt", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::writeInt(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.tools.GLConvertUtil.writeInt(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::moveArray", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::moveArray(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.tools.GLConvertUtil.moveArray(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::get1BString", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::get1BString(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.get1BString(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::getString", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::getString(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.getString(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.tools.GLConvertUtil::getSubBytes", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.tools.GLConvertUtil::getSubBytes(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.tools.GLConvertUtil.getSubBytes(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MsgProcessor::nativeInitMsg", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MsgProcessor ref = (com.autonavi.amap.mapcore.MsgProcessor) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MsgProcessor@" + refId + "::nativeInitMsg(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.nativeInitMsg();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MsgProcessor::nativeInit", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MsgProcessor ref = (com.autonavi.amap.mapcore.MsgProcessor) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MsgProcessor@" + refId + "::nativeInit(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.nativeInit(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MsgProcessor::nativeMsgProcessor", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MsgProcessor ref = (com.autonavi.amap.mapcore.MsgProcessor) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MsgProcessor@" + refId + "::nativeMsgProcessor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.nativeMsgProcessor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MsgProcessor::nativeCall", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MsgProcessor ref = (com.autonavi.amap.mapcore.MsgProcessor) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MsgProcessor@" + refId + "::nativeCall(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.nativeCall();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AbstractNativeInstance::getNativeInstance", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.AbstractNativeInstance ref = (com.autonavi.amap.mapcore.AbstractNativeInstance) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AbstractNativeInstance@" + refId + "::getNativeInstance(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = ref.getNativeInstance();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AbstractNativeInstance::createNativeInstace", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.AbstractNativeInstance ref = (com.autonavi.amap.mapcore.AbstractNativeInstance) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AbstractNativeInstance@" + refId + "::createNativeInstace(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.createNativeInstace();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.LinkInfo::getState", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.LinkInfo ref = (com.autonavi.amap.mapcore.LinkInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.LinkInfo@" + refId + "::getState(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getState();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.LinkInfo::setState", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.LinkInfo ref = (com.autonavi.amap.mapcore.LinkInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.LinkInfo@" + refId + "::setState(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setState(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.LinkInfo::getTime", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.LinkInfo ref = (com.autonavi.amap.mapcore.LinkInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.LinkInfo@" + refId + "::getTime(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.LinkInfo::setTime", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.LinkInfo ref = (com.autonavi.amap.mapcore.LinkInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.LinkInfo@" + refId + "::setTime(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTime(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.LinkInfo::getLength", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.LinkInfo ref = (com.autonavi.amap.mapcore.LinkInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.LinkInfo@" + refId + "::getLength(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getLength();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.LinkInfo::setLength", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.LinkInfo ref = (com.autonavi.amap.mapcore.LinkInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.LinkInfo@" + refId + "::setLength(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLength(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativePolyline::nativeCreate", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativePolyline::nativeCreate(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.autonavi.amap.mapcore.AMapNativePolyline.nativeCreate();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativePolyline::nativeSetGLShaderManager", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                long var2 = (long) (int) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativePolyline::nativeSetGLShaderManager(" + var0 + var2 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.AMapNativePolyline.nativeSetGLShaderManager(var0, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativePolyline::nativeDrawLineByTextureID", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                float[] var2 = (float[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                Double var4 = (Double) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                Double var6 = (Double) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                Double var7 = (Double) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                Double var8 = (Double) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                Double var9 = (Double) ((Map<String, Object>) args).get("var9");
                // jsonable arg
                Double var10 = (Double) ((Map<String, Object>) args).get("var10");
                // jsonable arg
                boolean var11 = (boolean) ((Map<String, Object>) args).get("var11");
                // jsonable arg
                boolean var12 = (boolean) ((Map<String, Object>) args).get("var12");
                // jsonable arg
                boolean var13 = (boolean) ((Map<String, Object>) args).get("var13");
                // jsonable arg
                float[] var14 = (float[]) ((Map<String, Object>) args).get("var14");
                // jsonable arg
                int var15 = (int) ((Map<String, Object>) args).get("var15");
                // jsonable arg
                int var16 = (int) ((Map<String, Object>) args).get("var16");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativePolyline::nativeDrawLineByTextureID(" + var0 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + var10 + var11 + var12 + var13 + var14 + var15 + var16 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.AMapNativePolyline.nativeDrawLineByTextureID(var0, var2, var3, new Double(var4).floatValue(), var5, new Double(var6).floatValue(), new Double(var7).floatValue(), new Double(var8).floatValue(), new Double(var9).floatValue(), new Double(var10).floatValue(), var11, var12, var13, var14, var15, var16);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativePolyline::nativeDestroy", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativePolyline::nativeDestroy(" + var0 + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.autonavi.amap.mapcore.AMapNativePolyline.nativeDestroy(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase::setLocationOption", (args, methodResult) -> {
                // args
                // ref arg
                com.autonavi.amap.mapcore.Inner_3dMap_locationOption var1 = (com.autonavi.amap.mapcore.Inner_3dMap_locationOption) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase@" + refId + "::setLocationOption(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLocationOption(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase::setLocationListener", (args, methodResult) -> {
                // args
                // ref arg
                com.autonavi.amap.mapcore.Inner_3dMap_locationListener var1 = (com.autonavi.amap.mapcore.Inner_3dMap_locationListener) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase@" + refId + "::setLocationListener(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLocationListener(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase::startLocation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase@" + refId + "::startLocation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startLocation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase::stopLocation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase@" + refId + "::stopLocation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopLocation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase::unRegisterLocationListener", (args, methodResult) -> {
                // args
                // ref arg
                com.autonavi.amap.mapcore.Inner_3dMap_locationListener var1 = (com.autonavi.amap.mapcore.Inner_3dMap_locationListener) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase@" + refId + "::unRegisterLocationListener(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.unRegisterLocationListener(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase::getLastKnownLocation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase@" + refId + "::getLastKnownLocation(" + "" + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.Inner_3dMap_location result;
                try {
                    result = ref.getLastKnownLocation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase::destroy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationManagerBase@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IPoint::obtain", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IPoint::obtain(" + "" + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.IPoint result;
                try {
                    result = com.autonavi.amap.mapcore.IPoint.obtain();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IPoint::obtain__int__int", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IPoint::obtain(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.IPoint result;
                try {
                    result = com.autonavi.amap.mapcore.IPoint.obtain(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IPoint::clone", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IPoint ref = (com.autonavi.amap.mapcore.IPoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IPoint@" + refId + "::clone(" + "" + ")");
                }
            
                // invoke native method
                Object result;
                try {
                    result = ref.clone();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Object jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.gles.AMapNativeGLShaderManager::nativeCreateGLShaderManager", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.gles.AMapNativeGLShaderManager::nativeCreateGLShaderManager(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = com.autonavi.amap.mapcore.gles.AMapNativeGLShaderManager.nativeCreateGLShaderManager();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.gles.AMapNativeGLShaderManager::nativeDestroyGLShaderManager", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.gles.AMapNativeGLShaderManager::nativeDestroyGLShaderManager(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.gles.AMapNativeGLShaderManager.nativeDestroyGLShaderManager(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.Inner_3dMap_locationListener::onLocationChanged", (args, methodResult) -> {
                // args
                // ref arg
                com.autonavi.amap.mapcore.Inner_3dMap_location var1 = (com.autonavi.amap.mapcore.Inner_3dMap_location) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.Inner_3dMap_locationListener ref = (com.autonavi.amap.mapcore.Inner_3dMap_locationListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.Inner_3dMap_locationListener@" + refId + "::onLocationChanged(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onLocationChanged(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.DPoint::obtain", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.DPoint::obtain(" + "" + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.DPoint result;
                try {
                    result = com.autonavi.amap.mapcore.DPoint.obtain();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.DPoint::obtain__double__double", (args, methodResult) -> {
                // args
                // jsonable arg
                double var0 = (double) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                double var2 = (double) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.DPoint::obtain(" + var0 + var2 + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.DPoint result;
                try {
                    result = com.autonavi.amap.mapcore.DPoint.obtain(var0, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineByMultiTextureID", (args, methodResult) -> {
                // args
                // jsonable arg
                float[] var0 = (float[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                Double var7 = (Double) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                float[] var8 = (float[]) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                int var9 = (int) ((Map<String, Object>) args).get("var9");
                // jsonable arg
                int var10 = (int) ((Map<String, Object>) args).get("var10");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineByMultiTextureID(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + var10 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.AMapNativeRenderer.nativeDrawLineByMultiTextureID(var0, var1, new Double(var2).floatValue(), var3, var4, var5, var6, new Double(var7).floatValue(), var8, var9, var10);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineByMultiColor", (args, methodResult) -> {
                // args
                // jsonable arg
                float[] var0 = (float[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int var7 = (int) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                float[] var8 = (float[]) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                int var9 = (int) ((Map<String, Object>) args).get("var9");
                // jsonable arg
                int var10 = (int) ((Map<String, Object>) args).get("var10");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineByMultiColor(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + var10 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.AMapNativeRenderer.nativeDrawLineByMultiColor(var0, var1, new Double(var2).floatValue(), var3, var4, var5, var6, var7, var8, var9, var10);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawGradientColorLine", (args, methodResult) -> {
                // args
                // jsonable arg
                float[] var0 = (float[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int var7 = (int) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                float[] var8 = (float[]) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                int var9 = (int) ((Map<String, Object>) args).get("var9");
                // jsonable arg
                int var10 = (int) ((Map<String, Object>) args).get("var10");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawGradientColorLine(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + var10 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.AMapNativeRenderer.nativeDrawGradientColorLine(var0, var1, new Double(var2).floatValue(), var3, var4, var5, var6, var7, var8, var9, var10);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineInit", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineInit(" + "" + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.AMapNativeRenderer.nativeDrawLineInit();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineByTextureID", (args, methodResult) -> {
                // args
                // jsonable arg
                float[] var0 = (float[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                Double var4 = (Double) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                Double var5 = (Double) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                Double var6 = (Double) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                Double var7 = (Double) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                Double var8 = (Double) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                boolean var9 = (boolean) ((Map<String, Object>) args).get("var9");
                // jsonable arg
                boolean var10 = (boolean) ((Map<String, Object>) args).get("var10");
                // jsonable arg
                boolean var11 = (boolean) ((Map<String, Object>) args).get("var11");
                // jsonable arg
                float[] var12 = (float[]) ((Map<String, Object>) args).get("var12");
                // jsonable arg
                int var13 = (int) ((Map<String, Object>) args).get("var13");
                // jsonable arg
                int var14 = (int) ((Map<String, Object>) args).get("var14");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.AMapNativeRenderer::nativeDrawLineByTextureID(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + var10 + var11 + var12 + var13 + var14 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.AMapNativeRenderer.nativeDrawLineByTextureID(var0, var1, new Double(var2).floatValue(), var3, new Double(var4).floatValue(), new Double(var5).floatValue(), new Double(var6).floatValue(), new Double(var7).floatValue(), new Double(var8).floatValue(), var9, var10, var11, var12, var13, var14);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::getMapBaseStorage", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::getMapBaseStorage(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.autonavi.amap.mapcore.FileUtil.getMapBaseStorage(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::getExternalStroragePath", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::getExternalStroragePath(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.autonavi.amap.mapcore.FileUtil.getExternalStroragePath(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::writeDatasToFile", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::writeDatasToFile(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.FileUtil.writeDatasToFile(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::readFileContents", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::readFileContents(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.FileUtil.readFileContents(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::createNoMediaFileIfNotExist", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::createNoMediaFileIfNotExist(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.FileUtil.createNoMediaFileIfNotExist(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::saveFile", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                boolean var2 = (boolean) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::saveFile(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    com.autonavi.amap.mapcore.FileUtil.saveFile(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::readFileContentsFromAssets", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::readFileContentsFromAssets(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = com.autonavi.amap.mapcore.FileUtil.readFileContentsFromAssets(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::getName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::getName(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.autonavi.amap.mapcore.FileUtil.getName(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.FileUtil::indexOfLastSeparator", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.FileUtil::indexOfLastSeparator(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = com.autonavi.amap.mapcore.FileUtil.indexOfLastSeparator(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::requireMapResource", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::requireMapResource(" + var1 + var2 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = ref.requireMapResource(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::reloadMapResource", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::reloadMapResource(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.reloadMapResource(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::requireMapData", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::requireMapData(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.requireMapData(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::requireCharBitmap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::requireCharBitmap(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = ref.requireCharBitmap(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::requireCharsWidths", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int[] var2 = (int[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::requireCharsWidths(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = ref.requireCharsWidths(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::requireMapRender", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::requireMapRender(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.requireMapRender(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::onMapRender", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::onMapRender(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onMapRender(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::cancelRequireMapData", (args, methodResult) -> {
                // args
                // jsonable arg
                Object var1 = (Object) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::cancelRequireMapData(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.cancelRequireMapData(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::OnIndoorBuildingActivity", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::OnIndoorBuildingActivity(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.OnIndoorBuildingActivity(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::generateRequestId", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::generateRequestId(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.generateRequestId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.IAMapEngineCallback::requireMapDataAsyn", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.IAMapEngineCallback ref = (com.autonavi.amap.mapcore.IAMapEngineCallback) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.IAMapEngineCallback@" + refId + "::requireMapDataAsyn(" + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.requireMapDataAsyn(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLTranslateAnimation::setFromPoint", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLTranslateAnimation ref = (com.autonavi.amap.mapcore.animation.GLTranslateAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLTranslateAnimation@" + refId + "::setFromPoint(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFromPoint(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLTransformation::clear", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLTransformation ref = (com.autonavi.amap.mapcore.animation.GLTransformation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLTransformation@" + refId + "::clear(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.clear();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimationSet::addAnimation", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.maps.model.animation.Animation var1 = (com.amap.api.maps.model.animation.Animation) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimationSet ref = (com.autonavi.amap.mapcore.animation.GLAnimationSet) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimationSet@" + refId + "::addAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.addAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimationSet::getAnimations", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimationSet ref = (com.autonavi.amap.mapcore.animation.GLAnimationSet) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimationSet@" + refId + "::getAnimations(" + "" + ")");
                }
            
                // invoke native method
                java.util.List<com.autonavi.amap.mapcore.animation.GLAnimation> result;
                try {
                    result = ref.getAnimations();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.autonavi.amap.mapcore.animation.GLAnimation item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimationSet::cleanAnimation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimationSet ref = (com.autonavi.amap.mapcore.animation.GLAnimationSet) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimationSet@" + refId + "::cleanAnimation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cleanAnimation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::clone", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::clone(" + "" + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.animation.GLAnimation result;
                try {
                    result = ref.clone();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::reset", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::reset(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.reset();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::cancel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::detach", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::detach(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.detach();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::isInitialized", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::isInitialized(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isInitialized();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::initialize", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::initialize(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.initialize();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setInterpolator__android_content_Context__int", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var1 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setInterpolator(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInterpolator(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setStartOffset", (args, methodResult) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setStartOffset(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setStartOffset(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setDuration", (args, methodResult) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setDuration(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDuration(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::restrictDuration", (args, methodResult) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::restrictDuration(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.restrictDuration(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::scaleCurrentDuration", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::scaleCurrentDuration(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.scaleCurrentDuration(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setStartTime", (args, methodResult) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setStartTime(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setStartTime(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::start", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::start(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.start();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::startNow", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::startNow(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startNow();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setRepeatMode", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setRepeatMode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRepeatMode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setRepeatCount", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setRepeatCount(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRepeatCount(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::isFillEnabled", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::isFillEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isFillEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setFillEnabled", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setFillEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFillEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setFillBefore", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setFillBefore(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFillBefore(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setFillAfter", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setFillAfter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFillAfter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setZAdjustment", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setZAdjustment(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZAdjustment(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setBackgroundColor", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setBackgroundColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBackgroundColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setDetachWallpaper", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setDetachWallpaper(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDetachWallpaper(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getStartTime", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getStartTime(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = ref.getStartTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getDuration", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getDuration(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = ref.getDuration();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getStartOffset", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getStartOffset(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = ref.getStartOffset();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getRepeatMode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getRepeatMode(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getRepeatMode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getRepeatCount", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getRepeatCount(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getRepeatCount();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getFillBefore", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getFillBefore(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.getFillBefore();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getFillAfter", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getFillAfter(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.getFillAfter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getZAdjustment", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getZAdjustment(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getZAdjustment();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getBackgroundColor", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getBackgroundColor(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getBackgroundColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getDetachWallpaper", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getDetachWallpaper(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.getDetachWallpaper();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::willChangeTransformationMatrix", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::willChangeTransformationMatrix(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.willChangeTransformationMatrix();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::willChangeBounds", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::willChangeBounds(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.willChangeBounds();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::setAnimationListener", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::setAnimationListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setAnimationListener(new com.amap.api.maps.model.animation.Animation.AnimationListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.animation.GLAnimation::setAnimationListener::Callback");
            
                    // call dart method
                    @Override
                    public void onAnimationStart() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onAnimationStart(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationStart",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                    @Override
                    public void onAnimationEnd() {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onAnimationEnd(" + "" + ")");
                        }
            
                        // convert to jsonable data
            
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationEnd",
                                new HashMap<String, Object>() {{
                
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::computeDurationHint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::computeDurationHint(" + "" + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = ref.computeDurationHint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getTransformation__int__com_autonavi_amap_mapcore_animation_GLTransformation", (args, methodResult) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) args).get("var1");
                // ref arg
                com.autonavi.amap.mapcore.animation.GLTransformation var3 = (com.autonavi.amap.mapcore.animation.GLTransformation) getHEAP().get((int) ((Map<String, Object>) args).get("var3"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getTransformation(" + var1 + var3 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.getTransformation(var1, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::getTransformation__int__com_autonavi_amap_mapcore_animation_GLTransformation__double", (args, methodResult) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) args).get("var1");
                // ref arg
                com.autonavi.amap.mapcore.animation.GLTransformation var3 = (com.autonavi.amap.mapcore.animation.GLTransformation) getHEAP().get((int) ((Map<String, Object>) args).get("var3"));
                // jsonable arg
                Double var4 = (Double) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::getTransformation(" + var1 + var3 + var4 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.getTransformation(var1, var3, new Double(var4).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::hasEnded", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::hasEnded(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.hasEnded();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::initializeInvalidateRegion", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::initializeInvalidateRegion(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    ref.initializeInvalidateRegion(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.animation.GLAnimation::hasAlpha", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.animation.GLAnimation ref = (com.autonavi.amap.mapcore.animation.GLAnimation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.animation.GLAnimation@" + refId + "::hasAlpha(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.hasAlpha();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::getAnchorY", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::getAnchorY(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getAnchorY();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::setAnchorY", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::setAnchorY(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAnchorY(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::getAnchorX", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::getAnchorX(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getAnchorX();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::setAnchorX", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::setAnchorX(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAnchorX(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::getChangedCounter", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::getChangedCounter(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getChangedCounter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::resetChangedCounter", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::resetChangedCounter(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resetChangedCounter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::isMapStateChange", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::isMapStateChange(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isMapStateChange();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::getChangeRatio", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::getChangeRatio(" + "" + ")");
                }
            
                // invoke native method
                double result;
                try {
                    result = ref.getChangeRatio();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::getChangeGridRatio", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::getChangeGridRatio(" + "" + ")");
                }
            
                // invoke native method
                double result;
                try {
                    result = ref.getChangeGridRatio();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.MapConfig::isZoomChanged", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.autonavi.amap.mapcore.MapConfig ref = (com.autonavi.amap.mapcore.MapConfig) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.MapConfig@" + refId + "::isZoomChanged(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isZoomChanged();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
        }};
    }
}
